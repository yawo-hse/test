name: CMake Build Matrix

on: [push, pull_request, workflow_dispatch]

env:
  CMAKE_VERSION: 3.18.3
  BUILD_TYPE: Debug

jobs:
  build:
    name: "Ubuntu Latest GCC"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: install-cmake
      # You may pin to the exact commit or the version.
      # uses: Symbitic/install-cmake@301e932c0011b8d12d8bf33d4975fd1e17972709
      uses: jwlawson/actions-setup-cmake@v1.8
      with:
        cmake-version: 3.18

    - name: Build
      run: |
        cmake -S . -B build-cmake
        cmake --build build-cmake --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build-cmake
      run: ctest -V -C $BUILD_TYPE

    - name: Convert coverage report
      uses: jandelgado/gcov2lcov-action@v1.0.5
      with:
        workspace: ${{github.workspace}}/build-cmake

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        working-directory: ${{github.workspace}}/build-cmake
    
  release:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Store Release url
      run: |
        echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url
    - uses: actions/upload-artifact@v1
      with:
        path: ./upload_url
        name: upload_url

  publish:
    if: contains(github.ref, 'tags/v')
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
    needs: release

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: ${{ matrix.config.artifact }}
        path: ./

    - name: Download URL
      uses: actions/download-artifact@v1
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url
    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: ./${{ matrix.config.artifact }}
        asset_name: ${{ matrix.config.artifact }}
        asset_content_type: application/x-gtar
